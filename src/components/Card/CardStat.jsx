/* eslint-disable no-unused-vars */
/* eslint-disable react-hooks/exhaustive-deps */
import React, { useState, useEffect } from "react";
import {
  LineChart,
  Line,
  CartesianGrid,
  XAxis,
  YAxis,
  Tooltip,
  Legend,
} from "recharts";

export default function CardStat() {
  const [chartData, setChartData] = useState([
    { name: "Page A", pv: 2400, uv: 4000 },
    { name: "Page B", pv: 1398, uv: 3000 },
    { name: "Page C", pv: 3498, uv: 2000 },
  ]);
  const [cards, setCards] = useState([
    {
      name: "Instagram",
      icon: (
        // Icon SVG
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="27"
          height="16"
          viewBox="0 0 27 16"
          fill="none"
        >
          <path
            d="M13.5 0C12.4557 0 11.4542 0.421428 10.7158 1.17157C9.97734 1.92172 9.5625 2.93913 9.5625 4C9.5625 5.06087 9.97734 6.07828 10.7158 6.82843C11.4542 7.57857 12.4557 8 13.5 8C14.5443 8 15.5458 7.57857 16.2842 6.82843C17.0227 6.07828 17.4375 5.06087 17.4375 4C17.4375 2.93913 17.0227 1.92172 16.2842 1.17157C15.5458 0.421428 14.5443 0 13.5 0ZM13.5 2.28571C13.9476 2.28571 14.3768 2.46633 14.6932 2.78782C15.0097 3.10931 15.1875 3.54534 15.1875 4C15.1875 4.45466 15.0097 4.89069 14.6932 5.21218C14.3768 5.53367 13.9476 5.71429 13.5 5.71429C13.0524 5.71429 12.6232 5.53367 12.3068 5.21218C11.9903 4.89069 11.8125 4.45466 11.8125 4C11.8125 3.54534 11.9903 3.10931 12.3068 2.78782C12.6232 2.46633 13.0524 2.28571 13.5 2.28571ZM6.1875 3.42857C5.44158 3.42857 4.72621 3.72959 4.19876 4.26541C3.67132 4.80123 3.375 5.52795 3.375 6.28571C3.375 7.36 3.97125 8.28572 4.82625 8.77714C5.23125 9.00572 5.6925 9.14286 6.1875 9.14286C6.6825 9.14286 7.14375 9.00572 7.54875 8.77714C7.965 8.53714 8.31375 8.19429 8.5725 7.78286C7.75125 6.69714 7.3125 5.37143 7.3125 4C7.3125 3.89714 7.3125 3.78286 7.3125 3.68C6.975 3.52 6.5925 3.42857 6.1875 3.42857ZM20.8125 3.42857C20.4075 3.42857 20.025 3.52 19.6875 3.68C19.6875 3.78286 19.6875 3.89714 19.6875 4C19.6875 5.37143 19.2487 6.69714 18.4275 7.78286C18.5625 8 18.7088 8.17143 18.8775 8.34286C19.0575 8.51429 19.2375 8.66286 19.4513 8.77714C19.8563 9.00572 20.3175 9.14286 20.8125 9.14286C21.3075 9.14286 21.7687 9.00572 22.1737 8.77714C23.0287 8.28572 23.625 7.36 23.625 6.28571C23.625 5.52795 23.3287 4.80123 22.8012 4.26541C22.2738 3.72959 21.5584 3.42857 20.8125 3.42857ZM13.5 10.2857C10.8675 10.2857 5.625 11.6229 5.625 14.2857V16H21.375V14.2857C21.375 11.6229 16.1325 10.2857 13.5 10.2857ZM5.29875 10.9143C3.1275 11.1771 0 12.2971 0 14.2857V16H3.375V13.7943C3.375 12.64 4.15125 11.68 5.29875 10.9143ZM21.7013 10.9143C22.8488 11.68 23.625 12.64 23.625 13.7943V16H27V14.2857C27 12.2971 23.8725 11.1771 21.7013 10.9143ZM13.5 12.5714C15.2212 12.5714 17.145 13.1429 18.2587 13.7143H8.74125C9.855 13.1429 11.7788 12.5714 13.5 12.5714Z"
            fill="white"
          />
        </svg>
      ),
      number: "572.938",
      total: "485.032",
      percent: 0.3,
    },
    {
      name: "Websites",
      icon: (
        // Icon SVG
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="16"
          viewBox="0 0 28 16"
          fill="none"
        >
          <path
            d="M15.1667 6.85714C15.8589 6.85714 16.5356 6.65606 17.1112 6.27933C17.6867 5.90259 18.1353 5.36712 18.4002 4.74063C18.6652 4.11414 18.7345 3.42477 18.5994 2.75969C18.4644 2.09461 18.131 1.4837 17.6415 1.00421C17.1521 0.524712 16.5284 0.198173 15.8495 0.0658806C15.1705 -0.0664116 14.4668 0.00148556 13.8273 0.260986C13.1877 0.520486 12.6411 0.959935 12.2565 1.52376C11.8719 2.08759 11.6667 2.75047 11.6667 3.42857C11.6667 4.33789 12.0354 5.20996 12.6918 5.85294C13.3482 6.49592 14.2384 6.85714 15.1667 6.85714ZM15.1667 2.28572C15.3974 2.28572 15.623 2.35274 15.8148 2.47832C16.0067 2.6039 16.1562 2.78239 16.2445 2.99122C16.3328 3.20005 16.3559 3.42984 16.3109 3.65153C16.2659 3.87323 16.1548 4.07686 15.9916 4.23669C15.8285 4.39653 15.6206 4.50537 15.3943 4.54947C15.168 4.59357 14.9334 4.57093 14.7202 4.48443C14.507 4.39793 14.3248 4.25145 14.1966 4.06351C14.0684 3.87557 14 3.65461 14 3.42857C14 3.12547 14.1229 2.83478 14.3417 2.62045C14.5605 2.40612 14.8572 2.28572 15.1667 2.28572ZM19.9617 6.69714C20.6442 5.73832 21.0102 4.59751 21.0102 3.42857C21.0102 2.25964 20.6442 1.11882 19.9617 0.160001C20.2972 0.0541879 20.6475 0.00020795 21 1.30665e-06C21.9283 1.30665e-06 22.8185 0.361225 23.4749 1.00421C24.1313 1.64719 24.5 2.51926 24.5 3.42857C24.5 4.33789 24.1313 5.20996 23.4749 5.85294C22.8185 6.49592 21.9283 6.85714 21 6.85714C20.6475 6.85694 20.2972 6.80296 19.9617 6.69714ZM15.1667 9.14286C8.16667 9.14286 8.16667 13.7143 8.16667 13.7143V16H22.1667V13.7143C22.1667 13.7143 22.1667 9.14286 15.1667 9.14286ZM10.5 13.7143C10.5 13.3829 10.8733 11.4286 15.1667 11.4286C19.25 11.4286 19.7633 13.2114 19.8333 13.7143M28 13.7143V16H24.5V13.7143C24.4727 12.8647 24.273 12.029 23.9124 11.2559C23.5519 10.4828 23.0377 9.78778 22.4 9.21143C28 9.77143 28 13.7143 28 13.7143ZM9.33333 8H5.83333V11.4286H3.5V8H0V5.71429H3.5V2.28572H5.83333V5.71429H9.33333V8Z"
            fill="white"
          />
        </svg>
      ),
      number: "572.938",
      total: "485.032",
      percent: 0.7,
    },
    {
      name: "Gmail",
      icon: (
        // Icon SVG
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="19"
          height="19"
          viewBox="0 0 19 19"
          fill="none"
        >
          <path
            d="M16.7647 0L19 2.23529L2.23529 19L0 16.7647L16.7647 0ZM3.91176 0.558824C5.76706 0.558824 7.26471 2.05647 7.26471 3.91176C7.26471 5.76706 5.76706 7.26471 3.91176 7.26471C2.05647 7.26471 0.558824 5.76706 0.558824 3.91176C0.558824 2.05647 2.05647 0.558824 3.91176 0.558824ZM15.0882 11.7353C16.9435 11.7353 18.4412 13.2329 18.4412 15.0882C18.4412 16.9435 16.9435 18.4412 15.0882 18.4412C13.2329 18.4412 11.7353 16.9435 11.7353 15.0882C11.7353 13.2329 13.2329 11.7353 15.0882 11.7353ZM3.91176 2.79412C3.29706 2.79412 2.79412 3.29706 2.79412 3.91176C2.79412 4.52647 3.29706 5.02941 3.91176 5.02941C4.52647 5.02941 5.02941 4.52647 5.02941 3.91176C5.02941 3.29706 4.52647 2.79412 3.91176 2.79412ZM15.0882 13.9706C14.4735 13.9706 13.9706 14.4735 13.9706 15.0882C13.9706 15.7029 14.4735 16.2059 15.0882 16.2059C15.7029 16.2059 16.2059 15.7029 16.2059 15.0882C16.2059 14.4735 15.7029 13.9706 15.0882 13.9706Z"
            fill="white"
          />
        </svg>
      ),
      number: "572.938",
      total: "485.032",
      percent: 0.5,
    },
  ]);

  const [showPopup, setShowPopup] = useState(false);
  const [selectedCard, setSelectedCard] = useState(null);

  const togglePopup = (card) => {
    setSelectedCard(card);
    setShowPopup(!showPopup);
  };

  const fetchLatestVisitors = () => {
    const updatedCards = cards.map((card) => ({
      ...card,
      number: (Math.floor(Math.random() * 500000) + 500000).toLocaleString(),
      total: (Math.floor(Math.random() * 500000) + 500000).toLocaleString(),
      percent: Math.floor(Math.random() * 100) / 100,
    }));
    setCards(updatedCards);
  };

  useEffect(() => {
    const interval = setInterval(fetchLatestVisitors, 10000);

    return () => clearInterval(interval);
  }, []);

  return (
    <>
      {cards.map((val, index) => (
        <div className="container mx-auto px-2 py-2" key={index}>
          <div
            className="bg-white border-[1px] border-solid border-[#C3C9D9] rounded-3xl shadow p-4 flex flex-col cursor-pointer"
            onClick={() => togglePopup(val)}
          >
            <div className="flex items-center justify-between border-b-[1px] border-b-[#CAC8C8] pb-6">
              <div className="bg-[#3B3286] w-[44px] h-[44px] rounded-[10px] flex justify-center items-center">
                <div>{val.icon}</div>
              </div>
              <div className="mt-4">
                <h3 className="text-[#575757] font-primary font-medium text-[11px] text-right">
                  {val.name}
                </h3>
                <p className="text-[#575757] font-primary font-bold text-[17px]">
                  {val.number}
                </p>
              </div>
            </div>
            <div className="py-2 flex flex-col">
              <div className="flex flex-row items-center gap-1">
                <span className="font-bold font-primary text-[10px] text-[#3B3286]">
                  +{val.percent}%
                </span>
                <h4 className="text-[#575757] font-primary font-medium text-[10px]">
                  Last month
                </h4>
              </div>
              <div className="text-[#575757] font-primary font-bold text-[17px]">
                {val.total}
              </div>
            </div>
          </div>
        </div>
      ))}
      {showPopup && selectedCard && (
        <div className={`popup ${showPopup ? "active" : ""}`}>
          <div className="popup-inner">
            <h2>{selectedCard.name}</h2>
            {selectedCard && (
              <LineChart width={500} height={300} data={chartData}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Line type="monotone" dataKey="pv" stroke="#8884d8" />
                <Line type="monotone" dataKey="uv" stroke="#82ca9d" />
              </LineChart>
            )}
            <button onClick={() => togglePopup(null)} className="mt-2">
              Close
            </button>
          </div>
        </div>
      )}
    </>
  );
}
